openapi: 3.0.2
info:
  title: rails-api-boilerplate
  description: This is rails-api-boilerplate API
  version: 1.0.0
security:
  - Bearer: []
servers:
  - url: "http://localhost:8080/api/v1"
tags:
  - name: projects
  - name: users
  - name: tasks
  - name: teams
paths:
  /projects:
    get:
      tags:
        - projects
      summary: Get all projects.
      parameters: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                required:
                  - projects
                properties:
                  projects:
                    type: array
                    items:
                      $ref: '#/components/schemas/project'
                example:
                  projects:
                    -
                      id: 1
                      name: "Hartmann Group Project No.1"
                      description: "This is Hartmann Group Project No.1"
                      is_archived: false
                      created_at: "2020-10-05T05:02:03.369+09:00"
                      updated_at: "2020-10-05T05:02:03.369+09:00"
                    -
                      id: 2
                      name: "Hartmann Group Project No.2"
                      description: "This is Hartmann Group Project No.2"
                      is_archived: false
                      created_at: "2020-10-06T04:12:03.572+09:00"
                      updated_at: "2020-10-07T10:12:03.684+09:00"
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
              example:
                errors:
                  - "Not Authenticated"
    post:
      tags:
        - projects
      summary: Create a project.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
            example:
              name: Hartmann Group Project No.1
              description: This is Hartmann Group Project No.1
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                required:
                  - project
                properties:
                  project:
                    $ref: '#/components/schemas/project'
                example:
                  project:
                    id: 1
                    name: "Hartmann Group Project No.1"
                    description: "This is Hartmann Group Project No.1"
                    is_archived: false
                    created_at: "2020-10-05T05:02:03.369+09:00"
                    updated_at: "2020-10-05T05:02:03.369+09:00"
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
              example:
                errors:
                  - "Not Authenticated"
  /projects/{id}:
    get:
      tags:
        - projects
      summary: Get a project.
      parameters:
        - name: id
          in: path
          description: id of project to return
          required: true
          schema:
            type: integer
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                required:
                  - project
                properties:
                  project:
                    $ref: '#/components/schemas/project'
                example:
                  project:
                    id: 1
                    name: "Hartmann Group Project No.1"
                    description: "This is Hartmann Group Project No.1"
                    is_archived: false
                    created_at: "2020-10-05T05:02:03.369+09:00"
                    updated_at: "2020-10-05T05:02:03.369+09:00"
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
              example:
                errors:
                  - "Not Authenticated"
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
              example:
                errors:
                  - "Not Found"
    put:
      tags:
        - projects
      summary: Update a project.
      parameters:
        - name: id
          in: path
          description: id of project to return
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
                is_archived:
                  type: boolean
            example:
              name: Hartmann Group Project No.1
              description: This is Hartmann Group Project No.1
              is_archived: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                required:
                  - project
                properties:
                  project:
                    $ref: '#/components/schemas/project'
                example:
                  project:
                    id: 1
                    name: "Hartmann Group Project No.1"
                    description: "This is Hartmann Group Project No.1"
                    is_archived: true
                    created_at: "2020-10-05T05:02:03.369+09:00"
                    updated_at: "2020-10-05T05:02:03.369+09:00"
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
              example:
                errors:
                  - "Not Authenticated"
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
              example:
                errors:
                  - "Not Found"
    delete:
      tags:
        - projects
      summary: Delete a project.
      parameters:
        - name: id
          in: path
          description: id of project to return
          required: true
          schema:
            type: integer
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                required:
                  - project
                properties:
                  project:
                    $ref: '#/components/schemas/project'
                example:
                  project:
                    id: 1
                    name: "Hartmann Group Project No.1"
                    description: "This is Hartmann Group Project No.1"
                    is_archived: false
                    created_at: "2020-10-05T05:02:03.369+09:00"
                    updated_at: "2020-10-05T05:02:03.369+09:00"
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
              example:
                errors:
                  - "Not Authenticated"
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
              example:
                errors:
                  - "Not Found"
  /users:
    post:
      tags:
        - users
      summary: Create a user.
      requestBody:
        content:
          application/json:
            schema:
              properties:
                email:
                  description: user's email
                  type: string
                password:
                  description: user's password
                  type: string
              required:
                - email
                - password
              type: object
            example:
              email: sample@email.com
              password: password
      parameters: []
      responses:
        200:
          description: A JSON user's auth token
          content:
            application/json:
              schema:
                type: object
                properties:
                  auth_token:
                    type: string
              example:
                auth_token: eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjoxMDIsImV4cCI6MTYwMzU1OTMzMn0.o_RZeJxzJTcdN30PmxpH6zd0BrUvn477pTQCfaoYZOE
  /users/authenticate:
    post:
      tags:
        - users
      summary: Authenticate a user.
      requestBody:
        content:
          application/json:
            schema:
              properties:
                email:
                  description: user's email
                  type: string
                password:
                  description: user's password
                  type: string
              required:
                - email
                - password
              type: object
            example:
              email: sample@email.com
              password: password
      responses:
        200:
          description: A JSON user's auth token
          content:
            application/json:
              schema:
                type: object
                properties:
                  auth_token:
                    type: string
              example:
                auth_token: eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjoxMDIsImV4cCI6MTYwMzU1OTMzMn0.o_RZeJxzJTcdN30PmxpH6zd0BrUvn477pTQCfaoYZOE
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
              example:
                errors:
                  - "Not Authenticated"
  /tasks:
    get:
      tags:
        - tasks
      summary: Get all tasks.
      parameters: []
      responses:
        200:
          description: A JSON array of Task model
          content:
            application/json:
              schema:
                type: object
                properties:
                  tasks:
                    type: array
                    items:
                      $ref: '#/components/schemas/task'
              example:
                tasks:
                  -
                    id: 1
                    name: "Moore, Upton and Kessler Task No.1"
                    description: "This is Moore, Upton and Kessler Task No.1"
                    deadline_at: "2020-10-11T08:44:08.705+09:00"
                    is_completed: false
                    parent_task_id: 43
                    assigned_user_id: 32
                    created_user_id: 66
                    created_at: "2020-10-05T05:02:03.369+09:00"
                    updated_at: "2020-10-05T05:02:03.369+09:00"
                  -
                    id: 2
                    name: "Moore, Upton and Kessler Task No.2"
                    description: "This is Moore, Upton and Kessler Task No.2"
                    deadline_at: "2020-10-11T08:44:08.705+09:00"
                    is_completed: false
                    parent_task_id: 20
                    assigned_user_id: 40
                    created_user_id: 89
                    created_at: "2020-10-05T05:02:03.369+09:00"
                    updated_at: "2020-10-05T05:02:03.369+09:00"
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
              example:
                errors:
                  - "Not Authenticated"
    post:
      tags:
        - tasks
      summary: Create a task.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
                deadline_at:
                  type: string
                parent_task_id:
                  type: integer
                assigned_user_id:
                  type: integer
            example:
              name: Hartmann Group Project No.1
              description: This is Hartmann Group Project No.1
              deadline_at: "2020-10-11T08:44:08.705+09:00"
              parent_task_id: 43
              assigned_user_id: 32
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  tasks:
                    type: array
                    items:
                      $ref: '#/components/schemas/task'
              example:
                task:
                  id: 1
                  name: "Moore, Upton and Kessler Task No.1"
                  description: "This is Moore, Upton and Kessler Task No.1"
                  deadline_at: "2020-10-11T08:44:08.705+09:00"
                  is_completed: false
                  parent_task_id: 43
                  assigned_user_id: 32
                  created_user_id: 66
                  created_at: "2020-10-05T05:02:03.369+09:00"
                  updated_at: "2020-10-05T05:02:03.369+09:00"
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
              example:
                errors:
                  - "Not Authenticated"
  /tasks/{id}:
    get:
      tags:
        - tasks
      summary: Get a task.
      parameters:
        - name: id
          in: path
          description: id of task to return
          required: true
          schema:
            type: integer
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                required:
                  - task
                properties:
                  task:
                    $ref: '#/components/schemas/task'
                example:
                  task:
                    id: 1
                    name: "Moore, Upton and Kessler Task No.1"
                    description: "This is Moore, Upton and Kessler Task No.1"
                    deadline_at: "2020-10-11T08:44:08.705+09:00"
                    is_completed: false
                    parent_task_id: 43
                    assigned_user_id: 32
                    created_user_id: 66
                    created_at: "2020-10-05T05:02:03.369+09:00"
                    updated_at: "2020-10-05T05:02:03.369+09:00"
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
              example:
                errors:
                  - "Not Authenticated"
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
              example:
                errors:
                  - "Not Found"
    put:
      tags:
        - tasks
      summary: Update a task.
      parameters:
        - name: id
          in: path
          description: id of task to return
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
                deadline_at:
                  type: string
                parent_task_id:
                  type: integer
                assigned_user_id:
                  type: integer
            example:
              name: Hartmann Group Project No.1
              description: This is Hartmann Group Project No.1
              deadline_at: "2020-10-11T08:44:08.705+09:00"
              parent_task_id: 43
              assigned_user_id: 32
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                required:
                  - task
                properties:
                  task:
                    $ref: '#/components/schemas/task'
                example:
                  task:
                    id: 1
                    name: "Moore, Upton and Kessler Task No.1"
                    description: "This is Moore, Upton and Kessler Task No.1"
                    deadline_at: "2020-10-11T08:44:08.705+09:00"
                    is_completed: false
                    parent_task_id: 43
                    assigned_user_id: 32
                    created_user_id: 66
                    created_at: "2020-10-05T05:02:03.369+09:00"
                    updated_at: "2020-10-05T05:02:03.369+09:00"
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
              example:
                errors:
                  - "Not Authenticated"
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
              example:
                errors:
                  - "Not Found"
    delete:
      tags:
        - tasks
      summary: Delete a task.
      parameters:
        - name: id
          in: path
          description: id of task to return
          required: true
          schema:
            type: integer
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                required:
                  - task
                properties:
                  task:
                    $ref: '#/components/schemas/task'
                example:
                  task:
                    id: 1
                    name: "Moore, Upton and Kessler Task No.1"
                    description: "This is Moore, Upton and Kessler Task No.1"
                    deadline_at: "2020-10-11T08:44:08.705+09:00"
                    is_completed: false
                    parent_task_id: 43
                    assigned_user_id: 32
                    created_user_id: 66
                    created_at: "2020-10-05T05:02:03.369+09:00"
                    updated_at: "2020-10-05T05:02:03.369+09:00"
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
              example:
                errors:
                  - "Not Authenticated"
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
              example:
                errors:
                  - "Not Found"
  /teams:
    get:
      tags:
        - teams
      summary: Get all teams.
      parameters: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  teams:
                    type: array
                    items:
                      $ref: '#/components/schemas/team'
              example:
                teams:
                  -
                    id: 1
                    name: "Moore, Upton and Kessler Team No.1"
                    created_user_id: 66
                    created_at: "2020-10-05T05:02:03.369+09:00"
                    updated_at: "2020-10-05T05:02:03.369+09:00"
                  -
                    id: 2
                    name: "Moore, Upton and Kessler Team No.2"
                    created_user_id: 68
                    created_at: "2020-10-05T05:02:03.369+09:00"
                    updated_at: "2020-10-05T05:02:03.369+09:00"
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
              example:
                errors:
                  - "Not Authenticated"
    post:
      tags:
        - teams
      summary: Create a team.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
            example:
              name: Moore, Upton and Kessler Team No.1
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  tasks:
                    type: array
                    items:
                      $ref: '#/components/schemas/team'
              example:
                team:
                  id: 1
                  name: "Moore, Upton and Kessler Team No.1"
                  created_user_id: 66
                  created_at: "2020-10-05T05:02:03.369+09:00"
                  updated_at: "2020-10-05T05:02:03.369+09:00"
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
              example:
                errors:
                  - "Not Authenticated"
  /teams/{id}:
    get:
      tags:
        - teams
      summary: Get a team.
      parameters:
        - name: id
          in: path
          description: id of team to return
          required: true
          schema:
            type: integer
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                required:
                  - team
                properties:
                  team:
                    $ref: '#/components/schemas/team'
                example:
                  team:
                    id: 1
                    name: "Moore, Upton and Kessler Team No.1"
                    created_user_id: 66
                    created_at: "2020-10-05T05:02:03.369+09:00"
                    updated_at: "2020-10-05T05:02:03.369+09:00"
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
              example:
                errors:
                  - "Not Authenticated"
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
              example:
                errors:
                  - "Not Found"
    put:
      tags:
        - teams
      summary: Update a team.
      parameters:
        - name: id
          in: path
          description: id of team to return
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
            example:
              name: Moore, Upton and Kessler Team No.1
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                required:
                  - team
                properties:
                  team:
                    $ref: '#/components/schemas/team'
                example:
                  team:
                    id: 1
                    name: "Moore, Upton and Kessler Team No.1"
                    created_user_id: 66
                    created_at: "2020-10-05T05:02:03.369+09:00"
                    updated_at: "2020-10-05T05:02:03.369+09:00"
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
              example:
                errors:
                  - "Not Authenticated"
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
              example:
                errors:
                  - "Not Found"
    delete:
      tags:
        - teams
      summary: Delete a team.
      parameters:
        - name: id
          in: path
          description: id of team to return
          required: true
          schema:
            type: integer
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                required:
                  - team
                properties:
                  team:
                    $ref: '#/components/schemas/team'
                example:
                  team:
                    id: 1
                    name: "Moore, Upton and Kessler Team No.1"
                    created_user_id: 66
                    created_at: "2020-10-05T05:02:03.369+09:00"
                    updated_at: "2020-10-05T05:02:03.369+09:00"
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
              example:
                errors:
                  - "Not Authenticated"
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
              example:
                errors:
                  - "Not Found"
components:
  securitySchemes:
    Bearer:
      type: http
      scheme: bearer
      description: Credentials or access token for API
  schemas:
    project:
      type: object
      required:
        - id
        - name
        - description
        - is_archived
        - created_at
        - updated_at
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
        is_archived:
          type: boolean
        created_at:
          type: string
        updated_at:
          type: string
    task:
      type: object
      required:
        - id
        - name
        - description
        - deadline_at
        - is_completed
        - parent_task_id
        - assigned_user_id
        - created_user_id
        - created_at
        - updated_at
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
        deadline_at:
          type: string
        is_completed:
          type: boolean
        parent_task_id:
          type: integer
        assigned_user_id:
          type: integer
        created_user_id:
          type: integer
        created_at:
          type: string
        updated_at:
          type: string
    team:
      type: object
      required:
        - id
        - name
        - created_user_id
        - created_at
        - updated_at
      properties:
        id:
          type: integer
        name:
          type: string
        created_user_id:
          type: integer
        created_at:
          type: string
        updated_at:
          type: string
    401:
      type: object
      required:
        - errors
      properties:
        errors:
          type: array
          items:
            type: string
    404:
      type: object
      required:
        - errors
      properties:
        errors:
          type: array
          items:
            type: string
